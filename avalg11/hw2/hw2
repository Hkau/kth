Homework B for avalg11
Peter Boström <pbos@kth.se>
2011-10-27

# Problem 1: Using the 0/1-principle for sorting network, either show that the following sorting network correctly sorts 5 inputs, or find an input where it fails. In a compare element, the larger of the two values goes in the direction of the arrow.

# Problem 2: Crack RSA! Given the public RSA key (n, e) = (5192042249411, 3419183406883), find the decryption exponent d and find a number x that encrypts to your ten-digit personal number. Your answer should include x as well as explain calculations used to obtain x.

n can easily be factored into p and q (as n is small)

from this we can generate the totient, and from egcd we can get e's inverse mod totient, that is, d.

then we can calculate c^d mod n where c is 8902240814 (my social security number) using exponentiation by squaring (to be able to calculate c^d mod n in reasonable time).

lemming@phobos:~/Code/kth/avalg11/hw2$ ./rsacrack.py 
n = 5192042249411
e = 3419183406883
p = 1532371 q = 3388241
tot(n) = 5192037328800
d = 1456182194347
c^d mod n ( c = 8902240814 d = 1456182194347 n = 5192042249411 ) = 1643423774100
m^e mod n ( m = 1643423774100 e = 3419183406883 n = 5192042249411 ) = 8902240814

Answer: 1643423774100

# Problem 3: Multiply the following polynomials using Karatsuba's algorithm.

	x³ + 3x² + x - 1 and
	2x³ - x² + 3

# Problem 4: Show that it is easy to find a non-trivial factor of a Carmichael number. More precisely, there is a polynomial-time algorithm for finding a non-trivial factor with probability > 1/2. 
